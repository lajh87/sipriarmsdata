export_tiv <- readr::read_csv("data/export_tiv.csv")
export_tiv
export_tiv |>
dplyr::filter(Year != "Total") |>
dplyr::filter(Export_From != "All") |>
dplyr::filter(Import_To != "All")
export_tiv |>
dplyr::filter(Year != "Total") |>
dplyr::filter(Export_From != "All") |>
dplyr::filter(Import_To != "All") |>
dplyr::filter(Import_To != "Total")
export_tiv |>
dplyr::filter(Year != "Total") |>
dplyr::filter(Export_From != "All") |>
dplyr::filter(Import_To != "All") |>
dplyr::filter(Import_To != "Total") |>
dplyr::mutate(Year = as.numeric(Year)) |>
dplyr::filter(Year >= 2011)
export_tiv |>
dplyr::filter(Year != "Total") |>
dplyr::filter(Export_From != "All") |>
dplyr::filter(Import_To != "All") |>
dplyr::filter(Import_To != "Total") |>
dplyr::mutate(Year = as.numeric(Year)) |>
dplyr::filter(Year >= 2011) |>
dplyr::group_by(Export_From, Import_To) |>
dplyr::summarise(TIV = sum(TIV))
export_tiv |>
dplyr::filter(Year != "Total") |>
dplyr::filter(Export_From != "All") |>
dplyr::filter(Import_To != "All") |>
dplyr::filter(Import_To != "Total") |>
dplyr::mutate(Year = as.numeric(Year)) |>
dplyr::filter(Year >= 2011) |>
dplyr::group_by(Export_From, Import_To) |>
dplyr::summarise(TIV = sum(TIV, na.rm = TRUE))
url <- "https://armstrade.sipri.org/armstrade/page/values.php"
req <- httr::GET(url)
country_code <- req |>
httr::content() |>
xml2::xml_find_all("//select[@name = 'country_code']//option") |>
xml2::xml_attr("value")
country_label <- req |>
httr::content() |>
xml2::xml_find_all("//select[@name = 'country_code']//option") |>
xml2::xml_text()
dplyr::tibble(country_code, country_label)
dplyr::tibble(country_code, country_label) |>
write.csv("data-raw/sipri_country_list.csv", row.names = FALSE)
library(rworldmap)
getMap(resolution = "low")
worldmap <- getMap(resolution = "low")
worldmap@data
sipri_countries <- readr::read_csv("data-raw/sipri_country_list.csv")
worldmap@data |>
dplyr::select(ISO_a2, ISO_A3, NAME)
worldmap@data |>
dplyr::select(ISO_A2, ISO_A3, NAME)
sipri_countries
worldmap@data |>
dplyr::select(ISO_A2, ISO_A3, NAME) |>
write.csv("data-raw/rworldmap_countries.csv", row.names = FALSE)
shiny::runApp('inst/sipri_armstransfer')
library(leaflet)
library(rworldmap)
worldmap <- getMap(resolution = "low")
leaflet(worldmap) |>
addPolygons()
library(shiny)
library(leaflet)
library(rworldmap)
library(shiny)
worldmap <- getMap(resolution = "low")
ui <- fluidPage(
fluidRow(leafletOutput("map")),
fluidRow(verbatimTextOutput("click_data"))
)
server <- function(input, output, session) {
output$map <- renderLeaflet({
leaflet(worldmap) |>
addPolygons()
})
output$click_data <- renderText(input$mymap_shape_click)
}
shinyApp(ui, server)
usethis::use_description()
usethis::use_agpl3_license()
file.edit("R/sipriarmsdata.R")
dir.create("R")
file.edit("R/sipriarmsdata.R")
export_tiv
sipritiv <- readr::read_csv("data/import_tiv.csv")
sipritiv <- readr::read_csv("data/export_tiv.csv")
sipri_cat <- readr::read_csv("data/export_category.csv")
sipritiv
sipri_cat
usethis::use_data(sipritiv, overwrite = TRUE)
usethis::use_data(sipri_cat, overwrite = TRUE)
#' Prices of 50,000 round cut diamonds.
#'
#' A dataset containing the prices and other attributes of almost 54,000
#' diamonds.
#'
#' @format A data frame with 53940 rows and 10 variables:
#' \describe{
#'   \item{price}{price, in US dollars}
#'   \item{carat}{weight of the diamond, in carats}
#'   ...
#' }
#' @source \url{http://www.diamondse.info/}
"diamonds"
sipritiv
sipri_cat
usethis::use_package()
usethis::use_package("sipriarms")
